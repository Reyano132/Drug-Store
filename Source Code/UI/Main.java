//Main Frame
package com.UI;

import com.dao.Connect;
import java.awt.Color;
import java.awt.Frame;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;



public class Main extends javax.swing.JFrame {
    
        private ResultSet rs;
        private String med_name,quantity,expiray,content,precautions,dosage;
        private int row_no_med,row_no_sup,row_no_act;
        private String s_comp,s_add,s_web,s_comment,s_phone,s_fax;
        private int[] med_id,supplier_id,activity_id;
      
    public Main(){
        initComponents();
        this.setLocationRelativeTo(null);
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("icons8_Pill_16px.png")));
        this.setTitle("Drugs Store Management");
            try {
                MedicinesTable();
            } catch (SQLException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
    
    public void MedicinesTable() throws SQLException{
       refreshMedicines();
       Show_Med.setVisible(false);
       Edit_Med.setVisible(false);
       Delete_Med.setVisible(false);
    }
    
        @SuppressWarnings("empty-statement")
    public void refreshMedicines() throws SQLException{
        Connect c=new Connect();
        Connection con=c.getConnection();
        String sql="select * from med";
        Statement st=con.createStatement();
        rs=st.executeQuery(sql);
        Statement st1=con.createStatement();
        ResultSet cou=st1.executeQuery("select count(*) as cou from med");
        int row=cou.getInt("cou");
        st1.close();
        med_id=new int[row];
        String[] colname={"Medicine","Company","Quantity","Expiry Date"};
        Object[][] data=new Object[row][4];
        
        int i=0;
        while(rs.next()){
            med_id[i]=rs.getInt("med_id");
            data[i][0]=rs.getString("med_name");
            data[i][1]=rs.getString("company");
            data[i][2]=rs.getString("quantity");
            data[i][3]=rs.getString("expiray_date");
            i++; 
        }
        DefaultTableModel table=new DefaultTableModel(data,colname);
        MedicinesTable.setModel(table);
        st.close();
        con.close();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Header = new javax.swing.JPanel();
        StoreName = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        subtitle = new javax.swing.JLabel();
        Navbar = new javax.swing.JPanel();
        Medicines = new javax.swing.JPanel();
        md = new javax.swing.JPanel();
        ml = new javax.swing.JLabel();
        Suppliers = new javax.swing.JPanel();
        sd = new javax.swing.JPanel();
        sl = new javax.swing.JLabel();
        Activites = new javax.swing.JPanel();
        ad = new javax.swing.JPanel();
        al = new javax.swing.JLabel();
        CardDesk = new javax.swing.JPanel();
        MedicinesCard = new javax.swing.JPanel();
        MedicinesSearchBar = new javax.swing.JPanel();
        SIcone = new javax.swing.JLabel();
        MedicinesSearch = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        Show_Med = new javax.swing.JLabel();
        Edit_Med = new javax.swing.JLabel();
        Delete_Med = new javax.swing.JLabel();
        TablePanel = new javax.swing.JScrollPane();
        MedicinesTable = new javax.swing.JTable();
        SuppliersCard = new javax.swing.JPanel();
        SupplierSearchBar = new javax.swing.JPanel();
        SIcone1 = new javax.swing.JLabel();
        SupplierSearch = new javax.swing.JTextField();
        jSeparator4 = new javax.swing.JSeparator();
        Add_Supplier = new javax.swing.JLabel();
        Edit_Supplier = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Delete_Supplier = new javax.swing.JLabel();
        TablePanel1 = new javax.swing.JScrollPane();
        SuppliersTable = new javax.swing.JTable();
        ActivitiesCard = new javax.swing.JPanel();
        ActivitySearchBar = new javax.swing.JPanel();
        SIcone2 = new javax.swing.JLabel();
        ActivitySearch = new javax.swing.JTextField();
        jSeparator5 = new javax.swing.JSeparator();
        Add_Activity = new javax.swing.JLabel();
        New_Payment = new javax.swing.JLabel();
        Delete_Activity = new javax.swing.JLabel();
        Details_Payment = new javax.swing.JLabel();
        report = new javax.swing.JLabel();
        TablePanel2 = new javax.swing.JScrollPane();
        ActivityTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Header.setBackground(new java.awt.Color(0, 138, 230));

        StoreName.setFont(new java.awt.Font("Times New Roman", 3, 36)); // NOI18N
        StoreName.setForeground(new java.awt.Color(255, 255, 255));
        StoreName.setText("G.T. Drugs Store");

        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));

        subtitle.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        subtitle.setForeground(new java.awt.Color(255, 255, 255));
        subtitle.setText("24x7 Drugs Provider");

        javax.swing.GroupLayout HeaderLayout = new javax.swing.GroupLayout(Header);
        Header.setLayout(HeaderLayout);
        HeaderLayout.setHorizontalGroup(
            HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HeaderLayout.createSequentialGroup()
                .addContainerGap(355, Short.MAX_VALUE)
                .addGroup(HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HeaderLayout.createSequentialGroup()
                        .addComponent(StoreName, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(377, 377, 377))
                    .addGroup(HeaderLayout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(HeaderLayout.createSequentialGroup()
                .addGap(414, 414, 414)
                .addComponent(subtitle)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        HeaderLayout.setVerticalGroup(
            HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(StoreName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(subtitle)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        getContentPane().add(Header, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 0, 1010, 140));

        Navbar.setBackground(new java.awt.Color(0, 31, 51));

        Medicines.setBackground(new java.awt.Color(0, 61, 112));
        Medicines.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MedicinesMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout mdLayout = new javax.swing.GroupLayout(md);
        md.setLayout(mdLayout);
        mdLayout.setHorizontalGroup(
            mdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 9, Short.MAX_VALUE)
        );
        mdLayout.setVerticalGroup(
            mdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        ml.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        ml.setForeground(new java.awt.Color(255, 255, 255));
        ml.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/UI/Icons/icons8_Plus_Math_32px.png"))); // NOI18N
        ml.setText("Medicines");

        javax.swing.GroupLayout MedicinesLayout = new javax.swing.GroupLayout(Medicines);
        Medicines.setLayout(MedicinesLayout);
        MedicinesLayout.setHorizontalGroup(
            MedicinesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MedicinesLayout.createSequentialGroup()
                .addComponent(md, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ml, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );
        MedicinesLayout.setVerticalGroup(
            MedicinesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(md, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(MedicinesLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(ml, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        Suppliers.setBackground(new java.awt.Color(0, 31, 51));
        Suppliers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SuppliersMouseClicked(evt);
            }
        });

        sd.setBackground(new java.awt.Color(0, 31, 51));

        javax.swing.GroupLayout sdLayout = new javax.swing.GroupLayout(sd);
        sd.setLayout(sdLayout);
        sdLayout.setHorizontalGroup(
            sdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 9, Short.MAX_VALUE)
        );
        sdLayout.setVerticalGroup(
            sdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        sl.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        sl.setForeground(new java.awt.Color(255, 255, 255));
        sl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/UI/Icons/icons8_Customer_32px.png"))); // NOI18N
        sl.setText("Suppliers");

        javax.swing.GroupLayout SuppliersLayout = new javax.swing.GroupLayout(Suppliers);
        Suppliers.setLayout(SuppliersLayout);
        SuppliersLayout.setHorizontalGroup(
            SuppliersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SuppliersLayout.createSequentialGroup()
                .addComponent(sd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(sl, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 33, Short.MAX_VALUE))
        );
        SuppliersLayout.setVerticalGroup(
            SuppliersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(SuppliersLayout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addComponent(sl)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        Activites.setBackground(new java.awt.Color(0, 31, 51));
        Activites.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ActivitesMouseClicked(evt);
            }
        });

        ad.setBackground(new java.awt.Color(0, 31, 51));

        javax.swing.GroupLayout adLayout = new javax.swing.GroupLayout(ad);
        ad.setLayout(adLayout);
        adLayout.setHorizontalGroup(
            adLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 9, Short.MAX_VALUE)
        );
        adLayout.setVerticalGroup(
            adLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        al.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        al.setForeground(new java.awt.Color(255, 255, 255));
        al.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/UI/Icons/icons8_Purchase_Order_32px.png"))); // NOI18N
        al.setText("Activities");

        javax.swing.GroupLayout ActivitesLayout = new javax.swing.GroupLayout(Activites);
        Activites.setLayout(ActivitesLayout);
        ActivitesLayout.setHorizontalGroup(
            ActivitesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ActivitesLayout.createSequentialGroup()
                .addComponent(ad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(al, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 33, Short.MAX_VALUE))
        );
        ActivitesLayout.setVerticalGroup(
            ActivitesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ad, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(ActivitesLayout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addComponent(al)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout NavbarLayout = new javax.swing.GroupLayout(Navbar);
        Navbar.setLayout(NavbarLayout);
        NavbarLayout.setHorizontalGroup(
            NavbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Medicines, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Suppliers, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Activites, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        NavbarLayout.setVerticalGroup(
            NavbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NavbarLayout.createSequentialGroup()
                .addGap(140, 140, 140)
                .addComponent(Medicines, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Suppliers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Activites, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(288, Short.MAX_VALUE))
        );

        getContentPane().add(Navbar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 200, 650));

        CardDesk.setLayout(new java.awt.CardLayout());

        MedicinesCard.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        MedicinesSearchBar.setBackground(new java.awt.Color(102, 179, 255));

        SIcone.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/UI/Icons/icons8_Search_32px.png"))); // NOI18N
        SIcone.setToolTipText("Search for medicines");

        MedicinesSearch.setBackground(new java.awt.Color(102, 179, 255));
        MedicinesSearch.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        MedicinesSearch.setForeground(new java.awt.Color(255, 255, 255));
        MedicinesSearch.setToolTipText("Search Medicines by name");
        MedicinesSearch.setBorder(null);
        MedicinesSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MedicinesSearchActionPerformed(evt);
            }
        });
        MedicinesSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                MedicinesSearchKeyReleased(evt);
            }
        });

        jSeparator3.setForeground(new java.awt.Color(255, 255, 255));

        Show_Med.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/UI/Icons/icons8_View_Details_40px_1.png"))); // NOI18N
        Show_Med.setToolTipText("Show Details ");
        Show_Med.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                Show_MedMouseReleased(evt);
            }
        });

        Edit_Med.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Edit_Med.setForeground(new java.awt.Color(255, 255, 255));
        Edit_Med.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/UI/Icons/icons8_Edit_32px.png"))); // NOI18N
        Edit_Med.setToolTipText("Edit");
        Edit_Med.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                Edit_MedMouseReleased(evt);
            }
        });

        Delete_Med.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/UI/Icons/icons8_Trash_Can_40px_1.png"))); // NOI18N
        Delete_Med.setToolTipText("Delete Medicine");
        Delete_Med.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                Delete_MedMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout MedicinesSearchBarLayout = new javax.swing.GroupLayout(MedicinesSearchBar);
        MedicinesSearchBar.setLayout(MedicinesSearchBarLayout);
        MedicinesSearchBarLayout.setHorizontalGroup(
            MedicinesSearchBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MedicinesSearchBarLayout.createSequentialGroup()
                .addGap(110, 110, 110)
                .addComponent(SIcone)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(MedicinesSearchBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MedicinesSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 113, Short.MAX_VALUE)
                .addComponent(Show_Med)
                .addGap(111, 111, 111)
                .addComponent(Edit_Med)
                .addGap(108, 108, 108)
                .addComponent(Delete_Med)
                .addGap(90, 90, 90))
        );
        MedicinesSearchBarLayout.setVerticalGroup(
            MedicinesSearchBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MedicinesSearchBarLayout.createSequentialGroup()
                .addGroup(MedicinesSearchBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MedicinesSearchBarLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(MedicinesSearchBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(SIcone, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(MedicinesSearch))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(MedicinesSearchBarLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(MedicinesSearchBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Edit_Med, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Show_Med, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)))
                    .addGroup(MedicinesSearchBarLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(Delete_Med, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        MedicinesCard.add(MedicinesSearchBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1030, 70));

        TablePanel.setBackground(new java.awt.Color(255, 255, 255));

        MedicinesTable.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        MedicinesTable.setForeground(new java.awt.Color(153, 153, 153));
        MedicinesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        MedicinesTable.setGridColor(new java.awt.Color(255, 255, 255));
        MedicinesTable.setRowHeight(24);
        MedicinesTable.setSelectionBackground(new java.awt.Color(0, 138, 230));
        MedicinesTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MedicinesTableMouseClicked(evt);
            }
        });
        TablePanel.setViewportView(MedicinesTable);

        MedicinesCard.add(TablePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 1030, 450));

        CardDesk.add(MedicinesCard, "card2");

        SuppliersCard.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        SupplierSearchBar.setBackground(new java.awt.Color(102, 179, 255));

        SIcone1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/UI/Icons/icons8_Search_32px.png"))); // NOI18N
        SIcone1.setToolTipText("Search for medicines");

        SupplierSearch.setBackground(new java.awt.Color(102, 179, 255));
        SupplierSearch.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        SupplierSearch.setForeground(new java.awt.Color(255, 255, 255));
        SupplierSearch.setToolTipText("Search Suppliers by name");
        SupplierSearch.setBorder(null);
        SupplierSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SupplierSearchActionPerformed(evt);
            }
        });
        SupplierSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SupplierSearchKeyReleased(evt);
            }
        });

        jSeparator4.setForeground(new java.awt.Color(255, 255, 255));

        Add_Supplier.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/UI/Icons/icons8_Plus_Math_40px_1.png"))); // NOI18N
        Add_Supplier.setToolTipText("Add new Supplier");
        Add_Supplier.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                Add_SupplierMouseReleased(evt);
            }
        });

        Edit_Supplier.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/UI/Icons/icons8_Edit_32px.png"))); // NOI18N
        Edit_Supplier.setToolTipText("Edit Supplier's Details");
        Edit_Supplier.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                Edit_SupplierMouseReleased(evt);
            }
        });

        Delete_Supplier.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/UI/Icons/icons8_Trash_Can_40px_1.png"))); // NOI18N
        Delete_Supplier.setToolTipText("Delete Supplier's Details");
        Delete_Supplier.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                Delete_SupplierMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout SupplierSearchBarLayout = new javax.swing.GroupLayout(SupplierSearchBar);
        SupplierSearchBar.setLayout(SupplierSearchBarLayout);
        SupplierSearchBarLayout.setHorizontalGroup(
            SupplierSearchBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SupplierSearchBarLayout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addComponent(SIcone1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SupplierSearchBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SupplierSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(140, 140, 140)
                .addComponent(Add_Supplier)
                .addGap(105, 105, 105)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Edit_Supplier, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(110, 110, 110)
                .addComponent(Delete_Supplier)
                .addGap(90, 90, 90))
        );
        SupplierSearchBarLayout.setVerticalGroup(
            SupplierSearchBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SupplierSearchBarLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(SupplierSearchBarLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(SupplierSearchBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(SIcone1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SupplierSearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
            .addGroup(SupplierSearchBarLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(Add_Supplier, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(SupplierSearchBarLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(Edit_Supplier, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(SupplierSearchBarLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(Delete_Supplier, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        SuppliersCard.add(SupplierSearchBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1030, 70));

        TablePanel1.setBackground(new java.awt.Color(255, 255, 255));

        SuppliersTable.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        SuppliersTable.setForeground(new java.awt.Color(153, 153, 153));
        SuppliersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        SuppliersTable.setGridColor(new java.awt.Color(255, 255, 255));
        SuppliersTable.setRowHeight(24);
        SuppliersTable.setSelectionBackground(new java.awt.Color(0, 138, 230));
        SuppliersTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SuppliersTableMouseClicked(evt);
            }
        });
        TablePanel1.setViewportView(SuppliersTable);

        SuppliersCard.add(TablePanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 1030, 450));

        CardDesk.add(SuppliersCard, "card3");

        ActivitiesCard.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ActivitySearchBar.setBackground(new java.awt.Color(102, 179, 255));

        SIcone2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/UI/Icons/icons8_Search_32px.png"))); // NOI18N
        SIcone2.setToolTipText("Search for medicines");

        ActivitySearch.setBackground(new java.awt.Color(102, 179, 255));
        ActivitySearch.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        ActivitySearch.setForeground(new java.awt.Color(255, 255, 255));
        ActivitySearch.setToolTipText("Search Suppliers by name");
        ActivitySearch.setBorder(null);
        ActivitySearch.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        ActivitySearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ActivitySearchActionPerformed(evt);
            }
        });
        ActivitySearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ActivitySearchKeyReleased(evt);
            }
        });

        jSeparator5.setForeground(new java.awt.Color(255, 255, 255));

        Add_Activity.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/UI/Icons/icons8_Plus_Math_40px_1.png"))); // NOI18N
        Add_Activity.setToolTipText("Add new Activity");
        Add_Activity.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                Add_ActivityMouseReleased(evt);
            }
        });

        New_Payment.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        New_Payment.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/UI/Icons/icons8_Money_40px.png"))); // NOI18N
        New_Payment.setToolTipText("New Payment");
        New_Payment.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                New_PaymentMouseReleased(evt);
            }
        });

        Delete_Activity.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/UI/Icons/icons8_Trash_Can_40px_1.png"))); // NOI18N
        Delete_Activity.setToolTipText("Delete Activity");
        Delete_Activity.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                Delete_ActivityMouseReleased(evt);
            }
        });

        Details_Payment.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/UI/Icons/icons8_View_Details_40px_1.png"))); // NOI18N
        Details_Payment.setToolTipText("View Payment Details");
        Details_Payment.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                Details_PaymentMouseReleased(evt);
            }
        });

        report.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/UI/Icons/report-3-32.png"))); // NOI18N
        report.setToolTipText("create report for today's Activities");

        javax.swing.GroupLayout ActivitySearchBarLayout = new javax.swing.GroupLayout(ActivitySearchBar);
        ActivitySearchBar.setLayout(ActivitySearchBarLayout);
        ActivitySearchBarLayout.setHorizontalGroup(
            ActivitySearchBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ActivitySearchBarLayout.createSequentialGroup()
                .addGap(110, 110, 110)
                .addComponent(SIcone2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ActivitySearchBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ActivitySearch, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53)
                .addComponent(Add_Activity)
                .addGap(60, 60, 60)
                .addComponent(New_Payment, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(Details_Payment)
                .addGap(61, 61, 61)
                .addComponent(Delete_Activity)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addComponent(report)
                .addGap(52, 52, 52))
        );
        ActivitySearchBarLayout.setVerticalGroup(
            ActivitySearchBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ActivitySearchBarLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(ActivitySearchBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ActivitySearchBarLayout.createSequentialGroup()
                        .addGroup(ActivitySearchBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(SIcone2, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                            .addComponent(ActivitySearch))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ActivitySearchBarLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(ActivitySearchBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(Add_Activity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(New_Payment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Delete_Activity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Details_Payment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(report, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ActivitiesCard.add(ActivitySearchBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1030, 70));

        TablePanel2.setBackground(new java.awt.Color(255, 255, 255));
        TablePanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablePanel2MouseClicked(evt);
            }
        });

        ActivityTable.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        ActivityTable.setForeground(new java.awt.Color(153, 153, 153));
        ActivityTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        ActivityTable.setGridColor(new java.awt.Color(255, 255, 255));
        ActivityTable.setRowHeight(24);
        ActivityTable.setSelectionBackground(new java.awt.Color(0, 138, 230));
        ActivityTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ActivityTableMouseClicked(evt);
            }
        });
        TablePanel2.setViewportView(ActivityTable);

        ActivitiesCard.add(TablePanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 1010, 450));

        CardDesk.add(ActivitiesCard, "card3");

        getContentPane().add(CardDesk, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 140, 1010, 510));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void deactive(javax.swing.JPanel obj){
        obj.setBackground(new Color(0,31,51));
    }
    
    private void SuppliersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SuppliersMouseClicked
        Suppliers.setBackground(new Color(0,61,102));
        sd.setBackground(new Color(255,255,255));
        deactive(Medicines);deactive(md);
        deactive(Activites);deactive(ad);
        MedicinesCard.hide();
        ActivitiesCard.hide();
            try {
                SupplierTable();
            } catch (SQLException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        SuppliersCard.setVisible(true);
        
    }//GEN-LAST:event_SuppliersMouseClicked

   
    
    private void MedicinesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MedicinesMouseClicked
        Medicines.setBackground(new Color(0,61,102));
        md.setBackground(new Color(255,255,255));
        deactive(Suppliers);deactive(sd);
        deactive(Activites);deactive(ad);
        SuppliersCard.hide();
        ActivitiesCard.hide();
            try {
                MedicinesTable();
            } catch (SQLException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        MedicinesCard.setVisible(true);
        
    }//GEN-LAST:event_MedicinesMouseClicked

    private void ActivitesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ActivitesMouseClicked
        Activites.setBackground(new Color(0,61,102));
        ad.setBackground(new Color(255,255,255));
        deactive(Suppliers);deactive(sd);
        deactive(Medicines);deactive(md);
        SuppliersCard.hide();
        MedicinesCard.hide();
            try {
                ActivityTable();
            } catch (SQLException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        ActivitiesCard.setVisible(true);
    }//GEN-LAST:event_ActivitesMouseClicked

    private void MedicinesSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MedicinesSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MedicinesSearchActionPerformed
    
    
    private void MedicinesTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MedicinesTableMouseClicked
        Show_Med.setVisible(true);
        Edit_Med.setVisible(true);
        Delete_Med.setVisible(true);
        int r=MedicinesTable.getSelectedRow();
        row_no_med=med_id[r];
    }//GEN-LAST:event_MedicinesTableMouseClicked

   
    private void MedicinesSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MedicinesSearchKeyReleased
            try {
                Connect c=new Connect();
                Connection con=c.getConnection();
                String s=MedicinesSearch.getText().trim();
                String sql="select * from med where med_name like '"+s+"%' order by med_id";
                Statement st=con.createStatement();
                rs=st.executeQuery(sql);
                //MedicinesTable.setModel(DbUtils.resultSetToTableModel(rs));
                Statement st1=con.createStatement();
                ResultSet cou=st1.executeQuery("select count(*) as cou from med where med_name like '"+s+"%'");
                int row=cou.getInt("cou");
                st1.close();
                med_id=new int[row];
                String[] colname={"Medicine","Company","Quantity","Expiry Date"};
                Object[][] data=new Object[row][4];

                int i=0;
                while(rs.next()){
                    med_id[i]=rs.getInt("med_id");
                    data[i][0]=rs.getString("med_name");
                    data[i][1]=rs.getString("company");
                    data[i][2]=rs.getString("quantity");
                    data[i][3]=rs.getString("expiray_date");
                    i++; 
                }
                DefaultTableModel table=new DefaultTableModel(data,colname);
                MedicinesTable.setModel(table);
                        con.close();
                    } catch (SQLException ex) {
                        Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                    }
    }//GEN-LAST:event_MedicinesSearchKeyReleased

    public void SupplierTable() throws SQLException{
        refreshSupplier();
        Add_Supplier.setVisible(true);
        Edit_Supplier.setVisible(false);
        Delete_Supplier.setVisible(false);
    }
    
    public void refreshSupplier() throws SQLException{
        Connect c=new Connect();
        Connection con=c.getConnection();
        String sql="select * from suppliers";
        Statement st=con.createStatement();
        rs=st.executeQuery(sql);
        Statement st1=con.createStatement();
        ResultSet cou=st1.executeQuery("select count(*) as cou from suppliers");
        int row=cou.getInt("cou");
        st1.close();
        supplier_id=new int[row];
        String[] colname={"Company","Address","Phone Number","Fax Number","Website","Comment"};
        Object[][] data=new Object[row][6];
        
        int i=0;
        while(rs.next()){
            supplier_id[i]=rs.getInt("supplier_id");
            data[i][0]=rs.getString("company");
            data[i][1]=rs.getString("address");
            data[i][2]=rs.getString("phone_no");
            data[i][3]=rs.getString("fax_no");
            data[i][4]=rs.getString("website");
            data[i][5]=rs.getString("comment");
            i++; 
        }
        DefaultTableModel table=new DefaultTableModel(data,colname);
        SuppliersTable.setModel(table);
        st.close();
        con.close();
    }
    
    private void SupplierSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SupplierSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SupplierSearchActionPerformed

    private void SupplierSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SupplierSearchKeyReleased
        try {
                Connect c=new Connect();
                Connection con=c.getConnection();
                String s=SupplierSearch.getText().trim();
                String sql="select * from suppliers where company like '"+s+"%' order by supplier_id";
                Statement st=con.createStatement();
                rs=st.executeQuery(sql);
                //SuppliersTable.setModel(DbUtils.resultSetToTableModel(rs));
                Statement st1=con.createStatement();
                ResultSet cou=st1.executeQuery("select count(*) as cou from suppliers where company like '"+s+"%'");
                int row=cou.getInt("cou");
                st1.close();
                supplier_id=new int[row];
                String[] colname={"Company","Address","Phone Number","Fax Number","Website","Comment"};
                Object[][] data=new Object[row][6];

                int i=0;
                while(rs.next()){
                    supplier_id[i]=rs.getInt("supplier_id");
                    data[i][0]=rs.getString("company");
                    data[i][1]=rs.getString("address");
                    data[i][2]=rs.getString("phone_no");
                    data[i][3]=rs.getString("fax_no");
                    data[i][4]=rs.getString("website");
                    data[i][5]=rs.getString("comment");
                    i++; 
                }
                DefaultTableModel table=new DefaultTableModel(data,colname);
                SuppliersTable.setModel(table);
                con.close();
                 
            } catch (SQLException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_SupplierSearchKeyReleased

    private void SuppliersTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SuppliersTableMouseClicked
        Edit_Supplier.setVisible(true);
        Delete_Supplier.setVisible(true);
        int r=SuppliersTable.getSelectedRow();
        row_no_sup=supplier_id[r];
    }//GEN-LAST:event_SuppliersTableMouseClicked

    private void ActivitySearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ActivitySearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ActivitySearchActionPerformed

    private void ActivitySearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ActivitySearchKeyReleased
            try {
                Connect c=new Connect();
                Connection con=c.getConnection();
                String s=ActivitySearch.getText().trim();
                String sql="select * from ActivityDetails where company like '"+s+"%' order by Activity_id";
                Statement st=con.createStatement();
                rs=st.executeQuery(sql);
                
                Statement st1=con.createStatement();
                ResultSet cou=st1.executeQuery("select count(*) as cou from ActivityDetails where company like '"+s+"%' order by Activity_id");
                int row=cou.getInt("cou");
                st1.close();
                activity_id=new int[row];
                String[] colname={"Company","Medicine","Quantity","Date","Total Amount","Balance"};
                Object[][] data=new Object[row][6];

                int i=0;
                while(rs.next()){
                    activity_id[i]=rs.getInt("activity_id");
                    data[i][0]=rs.getString("company");
                    data[i][1]=rs.getString("Medicines");
                    data[i][2]=rs.getString("quantity");
                    data[i][3]=rs.getString("date");
                    data[i][4]=rs.getString("total_amount");
                    data[i][5]=rs.getString("balance");
                    i++; 
                }
                DefaultTableModel table=new DefaultTableModel(data,colname);
                ActivityTable.setModel(table);
                st1.close();
                //ActivityTable.setModel(DbUtils.resultSetToTableModel(rs));
                con.close();
            } catch (SQLException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_ActivitySearchKeyReleased

    private void TablePanel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablePanel2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_TablePanel2MouseClicked

    private void ActivityTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ActivityTableMouseClicked
        New_Payment.setVisible(true);
        Delete_Activity.setVisible(true);
        Details_Payment.setVisible(true);
        row_no_act=activity_id[ActivityTable.getSelectedRow()];
    }//GEN-LAST:event_ActivityTableMouseClicked

    private void Show_MedMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Show_MedMouseReleased
        Connect c=new Connect();
        Connection con=c.getConnection();
            try {
                PreparedStatement ps=con.prepareStatement("select Generic_name,Dosage,Precautions from Med_Details where med_id=?");
                ps.setInt(1, row_no_med);
                rs=ps.executeQuery();
                while(rs.next()){
                    content=rs.getString("Generic_name");
                    dosage=rs.getString("Dosage");
                    precautions=rs.getString("Precautions");         
                }
                ps.close();
                con.close();
            } catch (SQLException ex) {
                System.out.println(ex);
            }
        MedDetails md=new MedDetails();
        md.getWindow(content, precautions, dosage);
    }//GEN-LAST:event_Show_MedMouseReleased

    private void Edit_MedMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Edit_MedMouseReleased
        Connect c=new Connect();
        Connection con=c.getConnection();
            try {
                PreparedStatement ps1=con.prepareStatement("select Generic_name,Dosage,Precautions from Med_Details where med_id=?");
                ps1.setInt(1, row_no_med);
                rs=ps1.executeQuery();
                while(rs.next()){
                    content=rs.getString("Generic_name");
                    dosage=rs.getString("Dosage");
                    precautions=rs.getString("Precautions");         
                }
                ps1.close();
                rs.close();
                PreparedStatement ps=con.prepareStatement("select * from med where med_id=?");
                ps.setInt(1,row_no_med);
                rs=ps.executeQuery();
                
                while(rs.next()){
                    med_name=rs.getString("med_name");
                    quantity=rs.getString("Quantity").toString();
                    expiray=rs.getString("expiray_date");
                }
                MedEdit me=new MedEdit();
                me.getWindow(row_no_med,med_name, quantity, expiray, content, precautions, dosage);
                con.close();
                
            } catch (SQLException ex) {
                System.out.println(ex);
            }
    }//GEN-LAST:event_Edit_MedMouseReleased

    private void Delete_MedMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Delete_MedMouseReleased
        int n=JOptionPane.showConfirmDialog(this,"Do you really want to delete this","Warning",JOptionPane.YES_NO_OPTION);
        if(n==0){
            Connect c=new Connect();
            Connection con=c.getConnection();
            try{
            PreparedStatement pst=con.prepareStatement("delete from medicines where med_id=?");
            pst.setInt(1,row_no_med);
            pst.executeUpdate();
            pst.close();
            con.close();
            refreshMedicines();

            }catch(SQLException e){
                 System.out.println(e);   
            }
        }
    }//GEN-LAST:event_Delete_MedMouseReleased

    private void Add_SupplierMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Add_SupplierMouseReleased
        SupplierEdit se=new SupplierEdit();
        se.getAddWindow();
    }//GEN-LAST:event_Add_SupplierMouseReleased

    private void Edit_SupplierMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Edit_SupplierMouseReleased
        Connect c=new Connect();
        Connection con=c.getConnection();
        
            try {
                PreparedStatement ps=con.prepareStatement("select * from Suppliers where supplier_id=? ");
                ps.setInt(1, row_no_sup);
                rs=ps.executeQuery();
                while(rs.next()){
                    s_comp=rs.getString("company");
                    s_add=rs.getString("address");
                    s_phone=rs.getString("phone_no");
                    s_fax=rs.getString("fax_no");
                    s_web=rs.getString("website");
                    s_comment=rs.getString("comment");
                    
                }
                ps.close();
                con.close();
            } catch (SQLException ex) {
                System.out.println(ex);
            }
        SupplierEdit se=new SupplierEdit();
        se.getEditWindow(row_no_sup,s_comp, s_add, s_phone, s_fax, s_web,s_comment);
    }//GEN-LAST:event_Edit_SupplierMouseReleased

    private void Delete_SupplierMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Delete_SupplierMouseReleased
        int n=JOptionPane.showConfirmDialog(this,"Do you really want to delete this","Warning",JOptionPane.YES_NO_OPTION);
        if(n==0){
            Connect c=new Connect();
            Connection con=c.getConnection();
            try{
            PreparedStatement pst=con.prepareStatement("delete from suppliers where supplier_id=?");
            pst.setInt(1,row_no_sup);
            pst.executeUpdate();
            pst.close();
            con.close();
            refreshSupplier();

            }catch(SQLException e){
                 System.out.println(e);   
            }
        }
    }//GEN-LAST:event_Delete_SupplierMouseReleased

    private void Add_ActivityMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Add_ActivityMouseReleased
        AddActivity v=new AddActivity();
            try {
                v.getWindow();
            } catch (SQLException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_Add_ActivityMouseReleased

    private void New_PaymentMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_New_PaymentMouseReleased
        System.out.println("pay");
        try {
                Connect c=new Connect();
                Connection con=c.getConnection();
                Statement st=con.createStatement();
                ResultSet rs=st.executeQuery("select balance from activity where activity_id="+row_no_act);
                int bal=rs.getInt("balance");
                Payment p=new Payment();
                p.getPayWindow(row_no_act, bal);
                rs.close();
                st.close();
                con.close();
            } catch (SQLException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_New_PaymentMouseReleased

    private void Delete_ActivityMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Delete_ActivityMouseReleased
        int n=JOptionPane.showConfirmDialog(this,"Do you really want to delete this","Warning",JOptionPane.YES_NO_OPTION);
        if(n==0){
            Connect c=new Connect();
            Connection con=c.getConnection();
            try{
            PreparedStatement pst=con.prepareStatement("delete from activity where activity_id=?");
            pst.setInt(1,row_no_act);
            pst.executeUpdate();
            pst.close();
            PreparedStatement pst0=con.prepareStatement("select payment_id from activity_payment where activity_id=?");
            pst0.setInt(1, row_no_act);
            ResultSet rs0=pst0.executeQuery();
            int pk=rs0.getInt("payment_id");
            rs0.close();pst0.close();
            PreparedStatement pst1=con.prepareStatement("delete  from activity_payment where activity_id=?");
            pst1.setInt(1,row_no_act);
            pst1.executeUpdate();
            pst1.close();
            
            PreparedStatement pst2=con.prepareStatement("delete  from payment where payment_id=?");
            pst2.setInt(1,pk);
            pst2.executeUpdate();
            pst2.close();
            
            PreparedStatement pst3=con.prepareStatement("delete  from card where payment_id=?");
            pst3.setInt(1,pk);
            pst3.executeUpdate();
            pst3.close();
            
            PreparedStatement pst4=con.prepareStatement("delete  from cheque where payment_id=?");
            pst4.setInt(1,pk);
            pst4.executeUpdate();
            pst4.close();
            
            con.close();
            ActivityTable();

            }catch(SQLException e){
                 System.out.println(e);   
            }
        }
    }//GEN-LAST:event_Delete_ActivityMouseReleased

    private void Details_PaymentMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Details_PaymentMouseReleased
            try {
                PaymentDetails pd=new PaymentDetails();
                pd.getWindow(row_no_act);
            } catch (SQLException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_Details_PaymentMouseReleased

    
    public void refreshActivities() throws SQLException{
        Connect c=new Connect();
        Connection con=c.getConnection();
        String sql="select * from Activitydetails";
        Statement st=con.createStatement();
        rs=st.executeQuery(sql);
        
        Statement st1=con.createStatement();
        ResultSet cou=st1.executeQuery("select count(*) as cou from Activitydetails");
        int row=cou.getInt("cou");
        st1.close();
        activity_id=new int[row];
        String[] colname={"Company","Medicine","Qunatity","Date","Total Amount","Balance"};
        Object[][] data=new Object[row][6];
        
        int i=0;
        while(rs.next()){
            activity_id[i]=rs.getInt("activity_id");
            data[i][0]=rs.getString("company");
            data[i][1]=rs.getString("Medicines");
            data[i][2]=rs.getString("quantity");
            data[i][3]=rs.getString("date");
            data[i][4]=rs.getString("total_amount");
            data[i][5]=rs.getString("balance");
            i++; 
        }
        DefaultTableModel table=new DefaultTableModel(data,colname);
        ActivityTable.setModel(table);
        st.close();
        con.close();
    }
    
    public void ActivityTable() throws SQLException{
        refreshActivities();
        Add_Activity.setVisible(true);
        New_Payment.setVisible(false);
        Delete_Activity.setVisible(false);
        Details_Payment.setVisible(false);
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Activites;
    private javax.swing.JPanel ActivitiesCard;
    private javax.swing.JTextField ActivitySearch;
    private javax.swing.JPanel ActivitySearchBar;
    private javax.swing.JTable ActivityTable;
    private javax.swing.JLabel Add_Activity;
    private javax.swing.JLabel Add_Supplier;
    private javax.swing.JPanel CardDesk;
    private javax.swing.JLabel Delete_Activity;
    private javax.swing.JLabel Delete_Med;
    private javax.swing.JLabel Delete_Supplier;
    private javax.swing.JLabel Details_Payment;
    private javax.swing.JLabel Edit_Med;
    private javax.swing.JLabel Edit_Supplier;
    private javax.swing.JPanel Header;
    private javax.swing.JPanel Medicines;
    private javax.swing.JPanel MedicinesCard;
    private javax.swing.JTextField MedicinesSearch;
    private javax.swing.JPanel MedicinesSearchBar;
    private javax.swing.JTable MedicinesTable;
    private javax.swing.JPanel Navbar;
    private javax.swing.JLabel New_Payment;
    private javax.swing.JLabel SIcone;
    private javax.swing.JLabel SIcone1;
    private javax.swing.JLabel SIcone2;
    private javax.swing.JLabel Show_Med;
    private javax.swing.JLabel StoreName;
    private javax.swing.JTextField SupplierSearch;
    private javax.swing.JPanel SupplierSearchBar;
    private javax.swing.JPanel Suppliers;
    private javax.swing.JPanel SuppliersCard;
    private javax.swing.JTable SuppliersTable;
    private javax.swing.JScrollPane TablePanel;
    private javax.swing.JScrollPane TablePanel1;
    private javax.swing.JScrollPane TablePanel2;
    private javax.swing.JPanel ad;
    private javax.swing.JLabel al;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JPanel md;
    private javax.swing.JLabel ml;
    private javax.swing.JLabel report;
    private javax.swing.JPanel sd;
    private javax.swing.JLabel sl;
    private javax.swing.JLabel subtitle;
    // End of variables declaration//GEN-END:variables
}
